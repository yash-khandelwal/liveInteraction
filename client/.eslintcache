[{"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\Channel.jsx":"1","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\PollsApp.jsx":"2","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\App\\App.jsx":"3","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\PrivateChat.jsx":"4","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\ChatApp\\ChatPrivate\\ChatPrivate.jsx":"5","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\ChatAll.jsx":"6","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\QnAApp.jsx":"7"},{"size":25126,"mtime":1610702494530,"results":"8","hashOfConfig":"9"},{"size":9518,"mtime":1610710750351,"results":"10","hashOfConfig":"9"},{"size":385,"mtime":1610378505439,"results":"11","hashOfConfig":"9"},{"size":5567,"mtime":1610704399468,"results":"12","hashOfConfig":"9"},{"size":3097,"mtime":1610378505543,"results":"13","hashOfConfig":"9"},{"size":2080,"mtime":1610701115663,"results":"14","hashOfConfig":"9"},{"size":6604,"mtime":1610705981377,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q32opf",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\Channel.jsx",[],"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\PollsApp.jsx",[],"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\App\\App.jsx",[],"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\PrivateChat.jsx",["31"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst ChatPrivate = ({\r\n  users,\r\n  sendMessage,\r\n  privateMessages,\r\n  userData,\r\n  setPrivateMessages,\r\n}) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [chating, setChating] = useState(null);\r\n\r\n  const messagesEndReference = useRef(null);\r\n  const scrollToBottom = () => {\r\n    messagesEndReference.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  useEffect(() => {\r\n    if (chating) {\r\n      scrollToBottom();\r\n    }\r\n  }, [privateMessages]);\r\n\r\n  return (\r\n    <div className=\"private-chat\">\r\n      {chating ? (\r\n        <div className=\"channel-chat\">\r\n          {/* <p>ChatAll</p> */}\r\n\r\n          <div className=\"chat-container px-2 mb-2\">\r\n            <div className=\"justify-content-center\">\r\n              <h5 className=\"text-center\">\r\n                <i\r\n                  className=\"far fa-times-circle\"\r\n                  style={{ width: \"1rem\", fontSize: \"1rem\", cursor: \"pointer\" }}\r\n                  onClick={(e) => {\r\n                    setChating(null);\r\n                  }}\r\n                />\r\n                {chating.userName}\r\n              </h5>\r\n              <p className=\"text-center text-muted\">\r\n                A web Developer and Devops Engineer\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\" private-chat-display \">\r\n            {privateMessages.get(chating.userName).messages &&\r\n              privateMessages\r\n                .get(chating.userName)\r\n                .messages.map((msg, index) => {\r\n                  return (\r\n                    <div className=\"public-chat px-2 mb-2  \" key={index}>\r\n                      <div className=\"justify-content-between py-2\">\r\n                        <span>{msg.user}</span>\r\n                        <span style={{ float: \"right\" }}>11:00</span>\r\n                      </div>\r\n                      <p>{msg.text}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n            <div ref={messagesEndReference} />\r\n          </div>\r\n          <div className=\"chatform\">\r\n            <form className=\"row\">\r\n              <input\r\n                type=\"text \"\r\n                className=\"form-control col-sm-10 ml-4\"\r\n                aria-label=\"Sizing example input\"\r\n                aria-describedby=\"inputGroup-sizing-sm\"\r\n                placeholder=\"Type the answer here ...\"\r\n                style={{\r\n                  backgroundColor: \"transparent\",\r\n                  color: \"white\",\r\n                }}\r\n                value={message}\r\n                onChange={(e) => {\r\n                  setMessage(e.target.value);\r\n                }}\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn text-white \"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  sendMessage({\r\n                    toSocket: chating.id,\r\n                    to: chating.userName,\r\n                    message: message,\r\n                  });\r\n                  setMessage(\"\");\r\n                }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-paper-plane\"\r\n                  aria-hidden=\"true\"\r\n                  style={{\r\n                    fontSize: \"1.5rem\",\r\n                    width: \" 1.5rem \",\r\n                    color: \"white\",\r\n                  }}\r\n                ></i>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"list-wrapper\"\r\n          ng-app=\"app\"\r\n          ng-controller=\"MainCtrl as ctrl\"\r\n        >\r\n          <ul className=\"list\">\r\n            {users.map((user, index) => {\r\n              if (user.userName !== userData.userName) {\r\n                return (\r\n                  <li\r\n                    className=\"list-item \"\r\n                    key={index}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={() => {\r\n                      setChating(user);\r\n                      setPrivateMessages((prevPrivateMessages) => {\r\n                        prevPrivateMessages.set(user.userName, {\r\n                          ...privateMessages.get(user.userName),\r\n                          unread: 0,\r\n                        });\r\n                        console.log(prevPrivateMessages);\r\n                        return new Map(prevPrivateMessages);\r\n                      });\r\n                      setMessage(\"\");\r\n                    }}\r\n                  >\r\n                    <div>\r\n                      <img\r\n                        alt=\"alt text\"\r\n                        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/488320/profile/profile-80.jpg\"\r\n                        className=\"list-item-image\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"list-item-content\">\r\n                      <h4>\r\n                        {user.displayName}{\" \"}\r\n                        {privateMessages.get(user.userName).unread > 0 && (\r\n                          <span>\r\n                            [{privateMessages.get(user.userName).unread}]\r\n                          </span>\r\n                        )}\r\n                      </h4>\r\n                      <p>@hk-skit</p>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              }\r\n              return \"\";\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPrivate;\r\n","D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\ChatApp\\ChatPrivate\\ChatPrivate.jsx",[],"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\ChatAll.jsx",[],"D:\\ENTERTAINMENT\\_study_videos\\WEB_DEV_MERN\\Web_Development\\_Internship_growthgear\\chatcomponent\\client\\src\\components\\Channel\\QnAApp.jsx",[],{"ruleId":"32","severity":1,"message":"33","line":21,"column":6,"nodeType":"34","endLine":21,"endColumn":23,"suggestions":"35"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chating'. Either include it or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [chating, privateMessages]",{"range":"39","text":"40"},[514,531],"[chating, privateMessages]"]