[{"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/PollsApp.jsx":"1","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/Channel.jsx":"2","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatPrivate/ChatPrivate.jsx":"3"},{"size":4563,"mtime":1610526187855,"results":"4","hashOfConfig":"5"},{"size":17536,"mtime":1610543429386,"results":"6","hashOfConfig":"5"},{"size":3002,"mtime":1610461195527,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1r4ajak",{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/PollsApp.jsx",["14"],"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/Channel.jsx",["15","16","17","18"],"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatPrivate/ChatPrivate.jsx",[],{"ruleId":"19","severity":1,"message":"20","line":42,"column":9,"nodeType":"21","messageId":"22","endLine":42,"endColumn":24},{"ruleId":"19","severity":1,"message":"23","line":4,"column":16,"nodeType":"21","messageId":"22","endLine":4,"endColumn":22},{"ruleId":"24","severity":1,"message":"25","line":49,"column":13,"nodeType":"26","endLine":99,"endColumn":4},{"ruleId":"27","severity":1,"message":"28","line":79,"column":23,"nodeType":"26","messageId":"29","endLine":79,"endColumn":25},{"ruleId":"19","severity":1,"message":"30","line":347,"column":9,"nodeType":"21","messageId":"22","endLine":347,"endColumn":21},"no-unused-vars","'sendTestMessage' is assigned a value but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'likeQuestion' is assigned a value but never used."]