[{"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/Channel.jsx":"1","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/QnAApp/QnAApp.jsx":"2","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatPrivate/ChatPrivate.jsx":"3","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatAll/ChatAll.jsx":"4","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/index.js":"5","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatApp.jsx":"6"},{"size":21739,"mtime":1610370835805,"results":"7","hashOfConfig":"8"},{"size":5563,"mtime":1610370558133,"results":"9","hashOfConfig":"8"},{"size":3002,"mtime":1610365368858,"results":"10","hashOfConfig":"8"},{"size":1436,"mtime":1610367158059,"results":"11","hashOfConfig":"8"},{"size":187,"mtime":1610284321283,"results":"12","hashOfConfig":"8"},{"size":1158,"mtime":1610367106286,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1r4ajak",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/Channel.jsx",["28"],"import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ChatApp from \"./ChatApp/ChatApp.jsx\";\nimport ChatAll from \"./ChatApp/ChatAll/ChatAll\";\nimport PollsApp from \"./PollsApp/PollsApp.jsx\";\nimport QnAApp from \"./QnAApp/QnAApp.jsx\";\nimport StatSection from \"./StatSection/StatSection.jsx\";\n\nlet socket;\nlet mp = new Map();\n\nconst Channel = ({ location }) => {\n  //global states\n  const [interaction, setInteraction] = useState(\"Chat\");\n  const ENDPOINT = \"http://localhost:5001\";\n  const [users, setUsers] = useState([]);\n  const [userData, setuserData] = useState({\n    userName: \"\",\n    displayName: \"\",\n    channelId: \"\",\n    role: \"\",\n  });\n\n  //chat states\n  const [channelChatMessages, setChannelChatMessages] = useState([]);\n  const [sidepannel, setSidepannel] = useState(false);\n  const [channelChatMessage, setChannelChatMessage] = useState(\"\");\n  const [privateMessages, setPrivateMessages] = useState(new Map());\n\n  //question states\n  const [question, setQuestion] = useState(new Map());\n  // poll states\n  const [polls, setPolls] = useState(new Map());\n  const [pollIds, setPollIds] = useState([]);\n  const [createPoll, setCreatePoll] = useState(false);\n  const [pollQuestion, setPollQuestion] = useState(\"\");\n  const [optionList, setOptionList] = useState([]);\n\n  useEffect(() => {\n    const { username, displayname, channel, presenter } = queryString.parse(\n      location.search\n    );\n    console.log(username, displayname, channel, presenter);\n    setuserData({\n      userName: username,\n      displayName: displayname,\n      channelId: channel,\n      role: presenter === \"host\",\n    });\n    socket = io(ENDPOINT);\n    socket.on(\"connection\", (error) => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"connected to backend\");\n      }\n    });\n    console.log(socket);\n    socket.emit(\n      \"join\",\n      {\n        userName: username,\n        displayName: displayname,\n        channel: channel,\n        role: presenter === \"host\",\n      },\n      (err) => {\n        if (err) {\n          alert(err);\n        }\n      }\n    );\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"newConnect\", (data) => {\n      mp.set(data.user.id, data.user.userName);\n      setUsers((prevUsers) => [...prevUsers, data.user]);\n      setPrivateMessages(\n        (prev) =>\n          new Map([\n            ...prev,\n            [data.user.userName, { active: true, messages: [], unread: 0 }],\n          ])\n      );\n      // console.log(mp);\n    });\n    socket.on(\"userDisconnect\", (userId) => {\n      mp.delete(userId);\n      setUsers((prevUsers) => {\n        return prevUsers.filter((user) => user.id !== userId);\n      });\n      setPrivateMessages((prevPrivateMessages) => {\n        prevPrivateMessages.set(mp.get(userId), { active: true, messages: [] });\n        return prevPrivateMessages;\n      });\n      // console.log(mp);\n    });\n    socket.on(\"channelMessage\", (data) => {\n      setChannelChatMessages((prevChatMessages) => {\n        return [...prevChatMessages, data];\n      });\n    });\n    // will happen only when client starts streaming\n    socket.on(\"channelData\", (data) => {\n      var privatemsg = new Map();\n      data.users.map((user) => {\n        mp.set(user.id, user.userName);\n        privatemsg.set(user.userName, {\n          active: true,\n          messages: [],\n          unread: 0,\n        });\n        return true;\n      });\n      // console.log(privatemsg);\n      setPrivateMessages(privatemsg);\n      // console.log(\"privateMessages: \", privateMessages);\n      setUsers(data.users);\n      // console.log(mp);\n    });\n    socket.on(\"infoMessage\", (data) => {\n      setChannelChatMessages((prevChatMessages) => {\n        return [\n          ...prevChatMessages,\n          {\n            user: \"info\",\n            text: data.info,\n          },\n        ];\n      });\n    });\n    socket.on(\"privateMessage\", (data) => {\n      console.log(\"aayaa toh\");\n      console.log(data);\n      // console.log(privateMessages);\n      setUsers((prevUsers) => {\n        let newUsers = [data.from];\n        prevUsers = prevUsers.filter((prev) => {\n          if (prev.userName !== data.from) {\n            return true;\n          } else {\n            newUsers[0] = prev;\n            return false;\n          }\n        });\n        newUsers = [...newUsers, ...prevUsers];\n        console.log(newUsers);\n        return newUsers;\n      });\n      setPrivateMessages((prevPrivateMessages) => {\n        console.log(prevPrivateMessages);\n        let { messages, unread } = prevPrivateMessages.get(data.from);\n        console.log(messages, unread);\n        // messageArr = messageArr.messages;\n        if (!messages) {\n          messages = [];\n        }\n        messages.push({\n          user: data.fromDisplayName,\n          text: data.message,\n        });\n        prevPrivateMessages.set(data.from, {\n          active: true,\n          messages: messages,\n          unread: unread + 1,\n        });\n        // console.log(prevPrivateMessages);\n        return new Map(prevPrivateMessages);\n      });\n      // console.log(privateMessages);\n    });\n    socket.on(\"newPoll\", (data) => {\n      console.log(\"poll aya aya aya aya\");\n      setPolls((prevPolls) => {\n        prevPolls.set(data.id, { ...data, voted: false });\n        console.log(prevPolls.get(data.id));\n        return new Map(prevPolls);\n      });\n      setPollIds((prev) => [...prev, data.id]);\n    });\n    socket.on(\"channelQuestion\", (data) => {\n      // console.log(question)\n      setQuestion((prevChatMessages) => {\n        prevChatMessages.set(data.id, data);\n        return new Map(prevChatMessages);\n      });\n    });\n\n    socket.on(\"channelAnswer\", (data) => {\n      setQuestion((prevQues) => {\n        let ques = prevQues.get(data.index);\n        ques.answer.push(data.answer);\n        prevQues.set(data.index, ques);\n        return new Map(prevQues);\n      });\n    });\n  }, []);\n\n  const sendChatMessageToChannel = () => {\n    const data = {\n      from: userData.userName,\n      fromDisplayName: userData.displayName,\n      to: userData.channelId,\n      message: channelChatMessage,\n    };\n    socket.emit(\"sendChatMessageToChannel\", data, () => {\n      setChannelChatMessage(\"\");\n    });\n  };\n\n  const sendChatMessageToUser = ({ toSocket, to, message }) => {\n    const data = {\n      from: userData.userName,\n      fromDisplayName: userData.displayName,\n      toSocket: toSocket,\n      to: to,\n      message: message,\n    };\n    socket.emit(\"sendChatMessageToUser\", data, () => {\n      setUsers((prevUsers) => {\n        let newUsers = [data.to];\n        prevUsers = prevUsers.filter((prev) => {\n          if (prev.userName !== data.to) {\n            return true;\n          } else {\n            newUsers[0] = prev;\n            return false;\n          }\n        });\n        newUsers = [...newUsers, ...prevUsers];\n        console.log(newUsers);\n        return newUsers;\n      });\n      setPrivateMessages((prevPrivateMessages) => {\n        console.log(prevPrivateMessages);\n        let messageArr = prevPrivateMessages.get(data.to).messages;\n        // messageArr = messageArr.messages;\n        if (!messageArr) {\n          messageArr = [];\n        }\n        messageArr.push({\n          user: data.from,\n          text: data.message,\n        });\n        prevPrivateMessages.set(data.to, {\n          active: true,\n          messages: messageArr,\n          unread: 0,\n        });\n        console.log(prevPrivateMessages);\n        return new Map(prevPrivateMessages);\n      });\n      console.log(\"nothing\");\n    });\n  };\n\n  const sendPoll = (pollData) => {\n    // console.log(pollData);\n    socket.emit(\n      \"sendPoll\",\n      {\n        user: userData,\n        question: pollData.pollQuestion,\n        options: pollData.optionList,\n      },\n      () => {\n        console.log(\"poll publish success\");\n      }\n    );\n  };\n  const sendVote = (id, optionNum) => {\n    socket.emit(\"vote\", { id, optionNum }, () => {\n      setPolls((prev) => {\n        prev.get(id).voted = optionNum;\n        console.log(prev.get(id));\n        return new Map(prev);\n      });\n    });\n  };\n\n  const sendVoteUpdate = (id, prevOptionNum, newOptionNum) => {\n    console.log(\"sendVoteUpdate triggered\");\n    socket.emit(\"voteUpdate\", { id, prevOptionNum, newOptionNum }, () => {\n      setPolls((prev) => {\n        prev.get(id).voted = newOptionNum;\n        console.log(prev.get(id));\n        return new Map(prev);\n      });\n    });\n  };\n\n  const sendQuestionToChannel = (formData) => {\n    const data = {\n      id: uuidv4(),\n      from: userData.userName,\n      fromDisplayName: userData.displayName,\n      to: userData.channelId,\n      question: formData,\n      answer: [],\n      likes: [],\n    };\n    socket.emit(\"sendQuestionToChannel\", data, () => {});\n  };\n  const sendAnswer = (index, answer) => {\n    const ansobj = {\n      answer,\n      from: userData.userName,\n      display: userData.displayName,\n    };\n    const data = { index, answer: ansobj, to: userData.channelId };\n    console.log(index, answer);\n    socket.emit(\"sendAnswerToChannel\", data, () => {});\n  };\n  const likeQuestion = (index, answer) => {\n    const data = { index, id: userData.userName };\n    console.log(index, answer);\n    socket.emit(\"sendlikeQuestion\", data, () => {});\n  };\n\n  return (\n    <div>\n      <StatSection users={users} />\n      <h3>Channel: {userData.channelId}</h3>\n      <h3>userName: {userData.userName}</h3>\n      <div>\n        <button\n          onClick={(e) => {\n            setInteraction(\"Chat\");\n          }}\n        >\n          Chat\n        </button>\n        <button\n          onClick={(e) => {\n            setInteraction(\"Polls\");\n          }}\n        >\n          Polls\n        </button>\n        <button\n          onClick={(e) => {\n            setInteraction(\"QnA\");\n          }}\n        >\n          QnA\n        </button>\n      </div>\n      {interaction === \"Chat\" && (\n        <ChatApp\n          messages={channelChatMessages}\n          message={channelChatMessage}\n          setMessage={setChannelChatMessage}\n          sendMessageToChannel={sendChatMessageToChannel}\n          sendMessageToUser={sendChatMessageToUser}\n          users={users}\n          privateMessages={privateMessages}\n          userData={userData}\n          setPrivateMessages={setPrivateMessages}\n        />\n      )}\n      {interaction === \"Polls\" && (\n        <PollsApp\n          socket={socket}\n          role={true}\n          polls={polls}\n          publishPoll={sendPoll}\n          createPoll={createPoll}\n          setCreatePoll={setCreatePoll}\n          pollQuestion={pollQuestion}\n          setPollQuestion={setPollQuestion}\n          optionList={optionList}\n          setOptionList={setOptionList}\n          pollIds={pollIds}\n          sendVote={sendVote}\n          sendVoteUpdate={sendVoteUpdate}\n        />\n      )}\n      {interaction === \"QnA\" && (\n        <QnAApp\n          role={userData.role}\n          question={question}\n          sendQuestionToChannel={sendQuestionToChannel}\n          sendAnswer={sendAnswer}\n        />\n      )}\n\n      <div>\n        <div\n          id=\"mySidepanel\"\n          className={`sidepanel ${\n            sidepannel ? \"sidepanel-open\" : \"sidepanel-closed\"\n          }`}\n        >\n          <div>\n            <ul\n              className=\"nav nav-pills mb-3 text-center px-1 justify-content-around\"\n              id=\"pills-tab\"\n              role=\"tablist\"\n            >\n              <li className=\"nav-item\" role=\"presentation\">\n                <a\n                  className=\"nav-link active\"\n                  id=\"pills-home-tab\"\n                  data-toggle=\"pill\"\n                  href=\"#pills-home\"\n                  role=\"tab\"\n                  aria-controls=\"pills-home\"\n                  aria-selected=\"true\"\n                >\n                  <i className=\"far fa-comments\" />\n                  Chat\n                </a>\n              </li>\n              <li className=\"nav-item\" role=\"presentation\">\n                <a\n                  className=\"nav-link\"\n                  id=\"pills-profile-tab\"\n                  data-toggle=\"pill\"\n                  href=\"#pills-profile\"\n                  role=\"tab\"\n                  aria-controls=\"pills-profile\"\n                  aria-selected=\"false\"\n                >\n                  <i className=\"fas fa-poll\" />\n                  Polls\n                </a>\n              </li>\n              <li className=\"nav-item\" role=\"presentation\">\n                <a\n                  className=\"nav-link\"\n                  id=\"pills-contact-tab\"\n                  data-toggle=\"pill\"\n                  href=\"#pills-contact\"\n                  role=\"tab\"\n                  aria-controls=\"pills-contact\"\n                  aria-selected=\"false\"\n                >\n                  <i className=\"far fa-comment-alt\" />\n                  Q&amp;A\n                </a>\n              </li>\n            </ul>\n            <div className=\"tab-content text-white\" id=\"pills-tabContent\">\n              <div\n                className=\"tab-pane fade show active\"\n                id=\"pills-home\"\n                role=\"tabpanel\"\n                aria-labelledby=\"pills-home-tab\"\n              >\n                <ul\n                  className=\"nav nav-pills mb-3 justify-content-center\"\n                  id=\"pills-tab text-center\"\n                  role=\"tablist\"\n                >\n                  <li className=\"nav-item\" role=\"presentation\">\n                    <a\n                      className=\"nav-link active text-center\"\n                      id=\"pills-public-tab\"\n                      data-toggle=\"pill\"\n                      href=\"#pills-public\"\n                      role=\"tab\"\n                      aria-controls=\"pills-public\"\n                      aria-selected=\"true\"\n                      style={{ width: \"13rem\" }}\n                    >\n                      Home\n                    </a>\n                  </li>\n                  <li className=\"nav-item\" role=\"presentation\">\n                    <a\n                      className=\"nav-link text-center\"\n                      id=\"pills-private-tab\"\n                      data-toggle=\"pill\"\n                      href=\"#pills-private\"\n                      role=\"tab\"\n                      aria-controls=\"pills-private\"\n                      aria-selected=\"false\"\n                      style={{ width: \"13rem\" }}\n                    >\n                      Profile\n                    </a>\n                  </li>\n                </ul>\n                <div className=\"tab-content\" id=\"pills-tabContent\">\n                  <div\n                    className=\"tab-pane fade show active px-2\"\n                    id=\"pills-public\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"pills-public-tab\"\n                  >\n                    <ChatAll\n                      messages={channelChatMessages}\n                      message={channelChatMessage}\n                      setMessage={setChannelChatMessage}\n                      sendMessage={sendChatMessageToChannel}\n                    />\n                  </div>\n                  <div\n                    className=\"tab-pane fade\"\n                    id=\"pills-private\"\n                    role=\"tabpanel\"\n                    aria-labelledby=\"pills-private-tab\"\n                  >\n                    Hello123\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"tab-pane fade px-2\"\n                id=\"pills-profile\"\n                role=\"tabpanel\"\n                aria-labelledby=\"pills-profile-tab\"\n              >\n                <br />\n                <br />\n                <div className=\"chat-container px-2 mb-2\">\n                  <div className=\"justify-content-between py-2 mt-2\">\n                    <span>Why is cryptocurrency expensive today ?</span>\n                  </div>\n                  <br />\n                  <div className=\"pl-3\">\n                    <div className=\"form-check py-2\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"exampleRadios\"\n                        id=\"exampleRadios1\"\n                        defaultValue=\"option1\"\n                        defaultChecked\n                      />\n                      <label\n                        className=\"form-check-label\"\n                        htmlFor=\"exampleRadios1\"\n                      >\n                        Default radio\n                        <span className=\"mr-4 votenumber\"> 240 votes</span>\n                      </label>\n                    </div>\n                    <div className=\"form-check py-2\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"exampleRadios\"\n                        id=\"exampleRadios2\"\n                        defaultValue=\"option2\"\n                      />\n                      <label\n                        className=\"form-check-label\"\n                        htmlFor=\"exampleRadios2\"\n                      >\n                        Second default radio\n                        <span className=\"mr-4 votenumber\"> 240 votes</span>\n                      </label>\n                    </div>\n                    <div className=\"form-check py-2\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"exampleRadios\"\n                        id=\"exampleRadios3\"\n                        defaultValue=\"option3\"\n                      />\n                      <label\n                        className=\"form-check-label\"\n                        htmlFor=\"exampleRadios3\"\n                      >\n                        Disabled radio\n                        <span className=\"mr-4 votenumber\"> 240 votes</span>\n                      </label>\n                    </div>\n                  </div>\n                  <br />\n                  <div className=\"justify-content-center\">\n                    <p className=\"text-center\">Show result</p>\n                  </div>\n                </div>\n                <div className=\"chat-container px-2 mb-2\">\n                  <div className=\"justify-content-between py-2 mt-2\">\n                    <span>Why is cryptocurrency expensive today ?</span>\n                  </div>\n                  <br />\n                  <div className=\"pl-3\">\n                    <div className=\"form-check py-2\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"radio1\"\n                        id=\"exampleRadios1\"\n                        defaultValue=\"option1\"\n                        defaultChecked\n                      />\n                      <label\n                        className=\"form-check-label\"\n                        htmlFor=\"exampleRadios1\"\n                      >\n                        Default radio\n                        <span className=\"mr-4 votenumber\"> 240 votes</span>\n                      </label>\n                    </div>\n                    <div className=\"form-check py-2\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"radio1\"\n                        id=\"exampleRadios2\"\n                        defaultValue=\"option2\"\n                      />\n                      <label\n                        className=\"form-check-label\"\n                        htmlFor=\"exampleRadios2\"\n                      >\n                        Second default radio\n                        <span className=\"mr-4 votenumber\"> 240 votes</span>\n                      </label>\n                    </div>\n                    <div className=\"form-check py-2\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"radio1\"\n                        id=\"exampleRadios3\"\n                        defaultValue=\"option3\"\n                      />\n                      <label\n                        className=\"form-check-label\"\n                        htmlFor=\"exampleRadios3\"\n                      >\n                        Disabled radio\n                        <span className=\"mr-4 votenumber\"> 240 votes</span>\n                      </label>\n                    </div>\n                  </div>\n                  <br />\n                  <div className=\"justify-content-center\">\n                    <p className=\"text-center\">Show result</p>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"tab-pane fade px-2\"\n                id=\"pills-contact\"\n                role=\"tabpanel\"\n                aria-labelledby=\"pills-contact-tab\"\n              >\n                <QnAApp\n                  role={userData.role}\n                  question={question}\n                  sendQuestionToChannel={sendQuestionToChannel}\n                  sendAnswer={sendAnswer}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"openbtn\"\n          onClick={(e) => {\n            setSidepannel(!sidepannel);\n          }}\n        >\n          ☰{\" \"}\n        </button>\n        <a href=\"#!\" className=\"closebtn\" onclick=\"closeNav()\">\n          ×\n        </a>\n        <h2>Collapsed Sidepanel</h2>\n        <p>Click on the hamburger menu/bar icon to open the sidepanel.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Channel;\n","/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/QnAApp/QnAApp.jsx",[],"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatPrivate/ChatPrivate.jsx",[],"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatAll/ChatAll.jsx",[],"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/index.js",[],"/home/specter25/cs2019-2023/growthgear/liveInteraction/client/src/components/Channel/ChatApp/ChatApp.jsx",["29"],"import React, { useState } from \"react\";\nimport ChatAll from \"./ChatAll/ChatAll.jsx\";\nimport ChatPrivate from \"./ChatPrivate/ChatPrivate.jsx\";\n\nconst ChatApp = ({\n  users,\n  messages,\n  message,\n  setMessage,\n  sendMessageToChannel,\n  sendMessageToUser,\n  privateMessages,\n  userData,\n  setPrivateMessages,\n}) => {\n  const [convType, setConvType] = useState(\"Channel\");\n  return (\n    <div>\n      <h1>ChatApp</h1>\n      <div>\n        <button\n          onClick={() => {\n            setConvType(\"Channel\");\n          }}\n        >\n          channel\n        </button>\n        <button\n          onClick={() => {\n            setConvType(\"Private\");\n          }}\n        >\n          private\n        </button>\n      </div>\n      <div>\n        {convType === \"Channel\" && (\n          <p>check sidenav</p>\n          \n        )}\n        {convType === \"Private\" && (\n          <ChatPrivate\n            users={users}\n            sendMessage={sendMessageToUser}\n            privateMessages={privateMessages}\n            userData={userData}\n            setPrivateMessages={setPrivateMessages}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatApp;\n",{"ruleId":"30","severity":1,"message":"31","line":318,"column":9,"nodeType":"32","messageId":"33","endLine":318,"endColumn":21},{"ruleId":"30","severity":1,"message":"34","line":2,"column":8,"nodeType":"32","messageId":"33","endLine":2,"endColumn":15},"no-unused-vars","'likeQuestion' is assigned a value but never used.","Identifier","unusedVar","'ChatAll' is defined but never used."]
